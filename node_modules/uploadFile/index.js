var formidable = require("formidable");
var fs = require("fs");
var mongo = require("mongodb");
// var server = new mongo.Server('127.0.0.1', '27017');
// var db = new mongo.Db('score', server, { safe: true });

function uploadFile(req, res) {
    var form = new formidable.IncomingForm();
    form.uploadDir = "tmp";
    form.multiples = true;
    form.parse(req, function(err, field, files) {
        fs.exists('./public/pdf/' + field.groupName, function(exists) {
            if (!exists) {
                fs.mkdirSync('./public/pdf/' + field.groupName);
            }
            var file = files.file;
            if (!(file instanceof Array)) {
                var tmp = [];
                tmp[0] = file;
                file = tmp;
            }
            file.forEach(function(e) {
                var server = new mongo.Server('127.0.0.1', '27017');
                var db = new mongo.Db('score', server, { safe: true });
                var type = e.name.split(".").pop();
                if (type == "doc" || type == "docx") {
                    var filesArray = fs.readdirSync('./public/pdf/' + field.groupName);
                    filesArray.forEach(function(t) {
                        if (/(\.do(c|cx))$/.test(t) && t != e.name) {
                            fs.unlinkSync('./public/pdf/' + field.groupName + '/' + t);
                        }
                    });
                    //若doc文件存在且不等于上传文件名则全部删除doc类型文件
                    fs.rename('./' + e.path, './public/pdf/' + field.groupName + '/' + e.name, function(err) {
                        if (err) {
                            res.end("cantnot move file");
                            console.log(err);
                        } else {
                            db.open(function(err, db) {
                                if (err) {
                                    res.end("cannot open mongo");
                                    throw err;
                                } else {
                                    db.collection("byGroup", function(err, collection) {
                                        if (err) {
                                            res.end("cannot select coll");
                                            throw err;
                                        } else {
                                            collection.findOne({ "groupName": field.groupName }, function(err, docs) {
                                                if (err) {
                                                    res.end("cannot get i form coll");
                                                    throw err;
                                                } else {
                                                    var d = new Date();
                                                    var time = d.toLocaleString();
                                                    docs.homework.doc = { "publisher": field.userName, "time": time, "name": e.name, "exit": true };
                                                    collection.update({ "groupName": field.groupName }, docs, function(err, result) {
                                                        if (err) {
                                                            res.end("cannot update coll");
                                                            throw err;
                                                        } else {
                                                            var ready = file.every(function(value, index, array) {
                                                                if (/(\.do(c|cx))$/.test(value.name)) {
                                                                    return true;
                                                                } else {
                                                                    return false;
                                                                }
                                                            });
                                                            var lastArr=file.slice().pop();
                                                            if (ready||(lastArr.path==e.path)) {
                                                                res.end("ok");
                                                                db.close(false);
                                                            }
                                                        }
                                                    });
                                                }
                                            });
                                        }
                                    });
                                }
                            });
                        }
                    });
                } else if (type == "xls" || type == "xlsx") {
                    var filesArray = fs.readdirSync('./public/pdf/' + field.groupName);
                    filesArray.forEach(function(t) {
                        if (/(\.xl(s|sx))$/.test(t) && t != e.name) {
                            fs.unlinkSync('./public/pdf/' + field.groupName + '/' + t);
                        }
                    });
                    fs.rename('./' + e.path, './public/pdf/' + field.groupName + '/' + e.name, function(err) {
                        if (err) {
                            res.end("cantnot move file");
                            console.log(err);
                        } else {
                            db.open(function(err, db) {
                                if (err) {
                                    res.end("cannot open mongo");
                                    throw err;
                                } else {
                                    db.collection("byGroup", function(err, collection) {
                                        if (err) {
                                            res.end("cannot select coll");
                                            throw err;
                                        } else {
                                            collection.findOne({ "groupName": field.groupName }, function(err, docs) {
                                                if (err) {
                                                    res.end("cannot get i form coll");
                                                    throw err;
                                                } else {
                                                    var d = new Date();
                                                    var time = d.toLocaleString();
                                                    docs.homework.xls = { "publisher": field.userName, "time": time, "name": e.name, "exit": true };
                                                    collection.update({ "groupName": field.groupName }, docs, function(err, result) {
                                                        if (err) {
                                                            res.end("cannot update coll");
                                                            throw err;
                                                        } else {
                                                            var ready = file.every(function(value, index, array) {
                                                                if (/(\.xl(s|sx))$/.test(value.name)) {
                                                                    return true;
                                                                } else {
                                                                    return false;
                                                                }
                                                            });
                                                            var lastArr=file.slice().pop();
                                                            if (ready||(lastArr.path==e.path)) {
                                                                res.end("ok");
                                                                db.close(false);
                                                            }
                                                        }
                                                    });
                                                }
                                            });
                                        }
                                    });
                                }
                            });
                        }
                    });
                } else if (type == "pdf") {
                    var filesArray = fs.readdirSync('./public/pdf/' + field.groupName);
                    filesArray.forEach(function(t) {
                        if (/(\.pdf)$/.test(t) && t != e.name) {
                            fs.unlinkSync('./public/pdf/' + field.groupName + '/' + t);
                        }
                    });
                    //若doc文件存在且不等于上传文件名则全部删除doc类型文件
                    fs.rename('./' + e.path, './public/pdf/' + field.groupName + '/' + e.name, function(err) {
                        if (err) {
                            res.end("cantnot move file");
                            console.log(err);
                        } else {
                            db.open(function(err, db) {
                                if (err) {
                                    res.end("cannot open mongo");
                                    throw err;
                                } else {
                                    db.collection("byGroup", function(err, collection) {
                                        if (err) {
                                            res.end("cannot select coll");
                                            throw err;
                                        } else {
                                            collection.findOne({ "groupName": field.groupName }, function(err, docs) {
                                                if (err) {
                                                    res.end("cannot get i form coll");
                                                    throw err;
                                                } else {
                                                    var d = new Date();
                                                    var time = d.toLocaleString();
                                                    docs.homework.pdf = { "publisher": field.userName, "time": time, "name": e.name, "exit": true };
                                                    collection.update({ "groupName": field.groupName }, docs, function(err, result) {
                                                        if (err) {
                                                            res.end("cannot update coll");
                                                            throw err;
                                                        } else {
                                                            var ready = file.every(function(value, index, array) {
                                                                if (/(\.pdf)$/.test(value.name)) {
                                                                    return true;
                                                                } else {
                                                                    return false;
                                                                }
                                                            });
                                                            var lastArr=file.slice().pop();
                                                            if (ready||(lastArr.path==e.path)) {
                                                                res.end("ok");
                                                                db.close(false);
                                                            }
                                                        }
                                                    });
                                                }
                                            });
                                        }
                                    });
                                }
                            });
                        }
                    });
                } else {
                    res.end("upload faild");
                }
            });
        });
    });
}
exports.uploadFile = uploadFile;
